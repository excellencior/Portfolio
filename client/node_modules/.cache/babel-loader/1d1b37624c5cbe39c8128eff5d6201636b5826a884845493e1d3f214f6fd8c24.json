{"ast":null,"code":"var _jsxFileName = \"D:\\\\zProject\\\\portfolio\\\\client\\\\src\\\\pages\\\\photography.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport PhotoCard from \"../components/photoCard\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://uxcdfactbubyfmlvtyas.supabase.co\";\nconst supabaseKey = process.env.REACT_APP_PROJECT_API_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst Photography = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      const {\n        data,\n        error\n      } = await supabase.storage.from(\"Photography\").list(\"public\", {\n        limit: 100\n      });\n      if (error) {\n        console.error(\"Error fetching images:\", error);\n      } else {\n        const imageObjects = data.map(file => ({\n          title: file.name.split(\".\")[0],\n          url: supabase.storage.from(\"Photography\").getPublicUrl(\"public/\" + file.name).data.publicUrl\n        }));\n        console.log(imageObjects);\n        setImages(imageObjects);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 5,\n    className: \"animate-slide-up\",\n    children: images.map((image, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 5,\n      children: /*#__PURE__*/_jsxDEV(PhotoCard, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_s(Photography, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = Photography;\nexport default Photography;\nvar _c;\n$RefreshReg$(_c, \"Photography\");","map":{"version":3,"names":["useState","useEffect","createClient","PhotoCard","Grid","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","process","env","REACT_APP_PROJECT_API_KEY","supabase","Photography","_s","images","setImages","fetchImages","data","error","storage","from","list","limit","console","imageObjects","map","file","title","name","split","url","getPublicUrl","publicUrl","log","container","spacing","className","children","image","index","item","xs","sm","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/zProject/portfolio/client/src/pages/photography.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport PhotoCard from \"../components/photoCard\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst supabaseUrl = \"https://uxcdfactbubyfmlvtyas.supabase.co\";\r\nconst supabaseKey = process.env.REACT_APP_PROJECT_API_KEY;\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nconst Photography = () => {\r\n\tconst [images, setImages] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchImages = async () => {\r\n\t\t\tconst { data, error } = await supabase.storage\r\n\t\t\t\t.from(\"Photography\") \r\n\t\t\t\t.list(\"public\", { limit: 100 });\r\n\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.error(\"Error fetching images:\", error);\r\n\t\t\t} else {\r\n\t\t\t\tconst imageObjects = data.map((file) => ({\r\n\t\t\t\t\ttitle: file.name.split(\".\")[0],\r\n\t\t\t\t\turl: supabase.storage.from(\"Photography\").getPublicUrl(\"public/\" + file.name).data.publicUrl,\r\n\t\t\t\t}));\r\n\t\t\t\tconsole.log(imageObjects);\r\n\t\t\t\tsetImages(imageObjects);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchImages();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={5} className=\"animate-slide-up\">\r\n\t\t\t{images.map((image, index) => (\r\n\t\t\t\t<Grid item xs={12} sm={6} md={5} key={index}>\r\n\t\t\t\t\t<PhotoCard image={image} />\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Photography;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;AACzD,MAAMC,QAAQ,GAAGV,YAAY,CAACK,WAAW,EAAEC,WAAW,CAAC;AAEvD,MAAMK,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACf,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,OAAO,CAC5CC,IAAI,CAAC,aAAa,CAAC,CACnBC,IAAI,CAAC,QAAQ,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAC,CAAC;MAEhC,IAAIJ,KAAK,EAAE;QACVK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC/C,CAAC,MAAM;QACN,MAAMM,YAAY,GAAGP,IAAI,CAACQ,GAAG,CAAEC,IAAI,KAAM;UACxCC,KAAK,EAAED,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC9BC,GAAG,EAAEnB,QAAQ,CAACQ,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC,CAACW,YAAY,CAAC,SAAS,GAAGL,IAAI,CAACE,IAAI,CAAC,CAACX,IAAI,CAACe;QACpF,CAAC,CAAC,CAAC;QACHT,OAAO,CAACU,GAAG,CAACT,YAAY,CAAC;QACzBT,SAAS,CAACS,YAAY,CAAC;MACxB;IACD,CAAC;IAEDR,WAAW,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCX,OAAA,CAACF,IAAI;IAAC+B,SAAS;IAACC,OAAO,EAAE,CAAE;IAACC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EACtDvB,MAAM,CAACW,GAAG,CAAC,CAACa,KAAK,EAAEC,KAAK,kBACxBlC,OAAA,CAACF,IAAI;MAACqC,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAN,QAAA,eAC/BhC,OAAA,CAACH,SAAS;QAACoC,KAAK,EAAEA;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADUR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAET,CAAC;AAAClC,EAAA,CAjCID,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}