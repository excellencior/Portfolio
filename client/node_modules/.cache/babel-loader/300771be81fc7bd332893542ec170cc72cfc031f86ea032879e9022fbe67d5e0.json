{"ast":null,"code":"var _jsxFileName = \"D:\\\\zProject\\\\portfolio\\\\client\\\\src\\\\pages\\\\photography.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport PhotoCard from '../components/photoCard';\nimport { Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.SUPABASE_PROJECT_URL;\nconst supabaseKey = process.env.SUPABASE_PROJECT_API;\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst ImageGallery = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      const {\n        data,\n        error\n      } = await supabase.storage.from('Photography') // Replace with your bucket name\n      .list('', {\n        limit: 100\n      }); // Adjust the path and limit as needed\n\n      if (error) {\n        console.error('Error fetching images:', error);\n      } else {\n        const imageObjects = data.map(file => ({\n          title: file.name,\n          url: supabase.storage.from('Photography').getPublicUrl(file.name).publicUrl\n        }));\n        setImages(imageObjects);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: images.map(image => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(PhotoCard, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, image.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["useState","useEffect","createClient","PhotoCard","Grid","jsxDEV","_jsxDEV","supabaseUrl","process","env","SUPABASE_PROJECT_URL","supabaseKey","SUPABASE_PROJECT_API","supabase","ImageGallery","_s","images","setImages","fetchImages","data","error","storage","from","list","limit","console","imageObjects","map","file","title","name","url","getPublicUrl","publicUrl","container","children","image","item","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/zProject/portfolio/client/src/pages/photography.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport PhotoCard from '../components/photoCard';\r\nimport { Grid } from '@mui/material';\r\n\r\nconst supabaseUrl = process.env.SUPABASE_PROJECT_URL;\r\nconst supabaseKey = process.env.SUPABASE_PROJECT_API;\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nconst ImageGallery = () => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      const { data, error } = await supabase.storage\r\n        .from('Photography') // Replace with your bucket name\r\n        .list('', { limit: 100 }); // Adjust the path and limit as needed\r\n\r\n      if (error) {\r\n        console.error('Error fetching images:', error);\r\n      } else {\r\n        const imageObjects = data.map((file) => ({\r\n          title: file.name,\r\n          url: supabase.storage.from('Photography').getPublicUrl(file.name).publicUrl,\r\n        }));\r\n        setImages(imageObjects);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container>\r\n\t  {images.map((image) => (\r\n\t\t<Grid item xs={12} md={4} key={image.title}>\r\n\t\t  <PhotoCard image={image} />\r\n\t\t</Grid>\r\n\t  ))}\r\n\t</Grid>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AACpD,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAG,CAACG,oBAAoB;AACpD,MAAMC,QAAQ,GAAGX,YAAY,CAACK,WAAW,EAAEI,WAAW,CAAC;AAEvD,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,OAAO,CAC3CC,IAAI,CAAC,aAAa,CAAC,CAAC;MAAA,CACpBC,IAAI,CAAC,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAC,CAAC,CAAC,CAAC;;MAE7B,IAAIJ,KAAK,EAAE;QACTK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,MAAM;QACL,MAAMM,YAAY,GAAGP,IAAI,CAACQ,GAAG,CAAEC,IAAI,KAAM;UACvCC,KAAK,EAAED,IAAI,CAACE,IAAI;UAChBC,GAAG,EAAElB,QAAQ,CAACQ,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC,CAACU,YAAY,CAACJ,IAAI,CAACE,IAAI,CAAC,CAACG;QACpE,CAAC,CAAC,CAAC;QACHhB,SAAS,CAACS,YAAY,CAAC;MACzB;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACF,IAAI;IAAC8B,SAAS;IAAAC,QAAA,EACfnB,MAAM,CAACW,GAAG,CAAES,KAAK,iBACnB9B,OAAA,CAACF,IAAI;MAACiC,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAAAJ,QAAA,eACvB7B,OAAA,CAACH,SAAS;QAACiC,KAAK,EAAEA;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADEP,KAAK,CAACP,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAC5B,EAAA,CAhCID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}